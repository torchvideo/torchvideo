# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
    maxParallel: 4
  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
  - task: UsePythonVersion@0
    displayName: 'Use Python $(python.version)'
    inputs:
      8ersionSpec: '$(python.version)'
      architecture: 'x64'
  - script: |
      source $CONDA/etc/profile.d/conda.sh
      cat environment.yml
      conda info -a
      conda env create --quiet --name torchvideo --file environment.yml
      conda activate torchvideo
    condition: ne(variables.CACHE_RESTORED, 'true')

    displayName: Create conda environment
  - script: |
      source $CONDA/etc/profile.d/conda.sh
      conda activate torchvideo
      echo $CONDA_PREFIX
      conda install -y pip setuptools
    displayName: Install python tooling
  - script: |
      source $CONDA/etc/profile.d/conda.sh
      conda activate torchvideo
      pushd tests/data/media; ./gen_test_media.sh; popd
    displayName: Download and generate test media
  - script: |
      source $CONDA/etc/profile.d/conda.sh
      conda activate torchvideo
      pip install -r dev-requirements.txt
      make test
    displayName: Run tests
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results*.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Publish'
  dependsOn: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'
  - script: |
      source $CONDA/etc/profile.d/conda.sh
      conda activate torchvideo
      python setup.py sdist
    displayName: 'Build sdist'
